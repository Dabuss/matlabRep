function constraintsAnalyser(c,vrep_store)

ntasks = length(vrep_store.tasks);
ndistances = length(vrep_store.distances_handles);
ind = find(c>0);
N = (ndistances-1)+1+1;

distancesNames = {'AutoCol_Distance_link3_KMR';...
                      'AutoCol_Distance_link4_KMR';...
                      'AutoCol_Distance_link5_KMR';...
                      'AutoCol_Distance_link6_KMR';...
                      'AutoCol_Distance_linkFlange_KMR';...
                      'AutoCol_Distance_EE_KMR';...
                      'AutoCol_Distance_EE_link0';...
                      'AutoCol_Distance_EE_link1';...
                      'AutoCol_Distance_EE_link2';...
                      'Col_Distance_KMR_scene';...
                      'Col_Distance_link0_scene';...
                      'Col_Distance_link1_scene';...
                      'Col_Distance_link2_scene';...
                      'Col_Distance_link3_scene';...
                      'Col_Distance_link4_scene';...
                      'Col_Distance_link5_scene';...
                      'Col_Distance_link6_scene'};

constraints_names = [repmat(['distanceToJointLimits';distancesNames(1:9);distancesNames(11:end)],[ntasks,1]);'distanceToBeingReachable';distancesNames(10)];

currentTaskNumber = 0;
for i = length(ind):-1:1
    
    if ind(i) == length(c) || ind(i) == length(c)-1
        disp(['     ', constraints_names{ind(i)}, ' : ', num2str(c(ind(i))) ])
    else
        
        
        q = idivide(int32(ind(i)),int32(N))+1;
        r = ind(i) - q*N;
        
        if currentTaskNumber ~= q
            disp(['task ',num2str(q)])
        end
        currentTaskNumber = q;
        
        
        disp(['     ', constraints_names{ind(i)}, ' : ', num2str(c(ind(i))) ])
    end
end




end

